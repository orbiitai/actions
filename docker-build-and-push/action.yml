name: 'Build and Push Docker Image'
description: 'Build a Docker image and push it to a Google Artifact Registry'

inputs:
  gcs-project-id:
    description: 'ID of the relevant GCS project'
    required: true
  gcs-zone:
    description: 'The zone the Google Artifact Repository is on'
    required: true
  artifact-repository-name:
    description: 'The artifact repository name'
    required: true
  image-name:
    description: 'The image name in the artifact repository'
    required: true
  version-number:
    description: 'The version number to push'
    required: true
  project-dir:
    description: 'path to project dir'
    required: true
    default: '.'
  build-args:
    description: 'Build arguments to pass to docker. Should be formatted as --build-arg <key1>=<value1> --build-arg <key2>=<value2>'
    required: false
    default: ''

runs:
  using: composite
  steps:
    - uses: google-github-actions/setup-gcloud@v0
      with:
        project_id: ${{ inputs.gcs-project-id }}
        export_default_credentials: true

    - id: docker-url
      name: "Create Docker URL"
      shell: bash
      run: echo "docker_url='${{ inputs.gcs-zone }}-docker.pkg.dev'" >> $GITHUB_ENV

    - id: image-name
      name: "Create image name"
      shell: bash
      run: echo "image_name='${{ env.docker_url }}/${{ inputs.gcs-project-id }}/${{ inputs.artifact-repository-name }}/${{ inputs.image-name }}'" >> $GITHUB_ENV
    
    - name: "Build and push image."
      shell: bash
      working-directory: ${{ inputs.project-dir }}
      run: |-
        gcloud auth configure-docker ${{ env.docker_url }}
        docker buildx build \
          --platform linux/amd64 \
          --tag ${{ env.image_name }}:${{ inputs.version-number }} \
          --tag ${{ env.image_name }}:latest \
          ${{ inputs.build-args }} .
        docker push -a ${{ env.image_name }}

